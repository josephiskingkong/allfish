<?php

ini_set('display_errors', 1);
error_reporting(E_ALL);

require_once __DIR__ . '/vendor/autoload.php';

$dotenv = Dotenv\Dotenv::createUnsafeImmutable(__DIR__);
$dotenv->load();


// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π orderid
if (!isset($_POST['orderid'])) {
  return '[]';
}

$botToken = getenv('botKey');
$dbhost = getenv('dbHost');
$dblogin = getenv('dbLogin');
$dbpass = getenv('dbPass');
$dbport = getenv('dbPort');

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö PostgreSQL
function db_connect() {
  $dbhost = getenv('dbHost');
$dblogin = getenv('dbLogin');
$dbpass = getenv('dbPass');
$dbport = getenv('dbPort');
  $conn = pg_connect("host={$dbhost} port={$dbport} dbname=support_infos user={$dblogin} password={$dbpass}");
  if (!$conn) {
    echo "–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö";
    exit;
  }
  return $conn;
}


function link_db_connect() {
  $dbhost = getenv('dbHost');
$dblogin = getenv('dbLogin');
$dbpass = getenv('dbPass');
$dbport = getenv('dbPort');
  $conn = pg_connect("host={$dbhost} port={$dbport} dbname=link_infos user={$dblogin} password={$dbpass}");
  if (!$conn) {
    echo "–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö";
    exit;
  }
  return $conn;
}

function user_db_connect() {
  $dbhost = getenv('dbHost');
$dblogin = getenv('dbLogin');
$dbpass = getenv('dbPass');
$dbport = getenv('dbPort');
  $conn = pg_connect("host={$dbhost} port={$dbport} dbname=user_infos user={$dblogin} password={$dbpass}");
  if (!$conn) {
    echo "–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö";
    exit;
  }
  return $conn;
}

// SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π isWatched
function get_messages($id, $conn) {
  $query = "SELECT * FROM support_infos WHERE orderid='$id' AND \"isWatched\"='false' ORDER BY id ASC";
  $result = pg_query($conn, $query);
  if (!$result) {
    echo "–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: " . pg_last_error($conn);
    exit;
  }
  return pg_fetch_all($result);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
function update_message($id, $conn) {
  $update_query = "UPDATE support_infos SET \"isWatched\"=true WHERE id='$id'";
  $result = pg_query($conn, $update_query);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Å—ã–ª–∫–µ
function get_link_info($id, $conn) {
  $query = "SELECT * FROM link_infos WHERE orderid='$id'";
  $result = pg_query($conn, $query);
  return pg_fetch_assoc($result);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
function get_user_info($chatID, $conn) {
  $query = "SELECT * FROM user_infos WHERE \"chatID\"='$chatID'";
  $result = pg_query($conn, $query);
  return pg_fetch_assoc($result);
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–æ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º
function send_message($chatID, $message) {
  global $botToken;
  $options = [
    "chat_id" => $chatID,
    "text" => $message,
    "parse_mode" => "HTML"
  ];
  $url = "https://api.telegram.org/bot" . $botToken . "/sendMessage?" . http_build_query($options);
  file_get_contents($url);
}

$id = $_POST['orderid'];
$linkconn = link_db_connect();
$conn = db_connect();
$userconn = user_db_connect();
$messages = array();
$messages = get_messages($id, $conn);
if (count($messages) == 0) {
  echo '[]';
} else {
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Å—ã–ª–∫–µ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    $linkInfo = get_link_info($id, link_db_connect());
    $user = get_user_info($linkInfo['workerID'], $userconn);
    if (!empty($linkInfo) && !empty($user)) {
    $workerID = $linkInfo['workerID'];
    $linkID = $linkInfo['id'];
    $supportID = $linkInfo['supportID'];
    $supportUsername = $linkInfo['supportUsername'];
    $isSupportOn = $user['isSupportOn'];
    $username = $user['workerusername'];
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≤–∏–¥–µ –º–∞—Å—Å–∏–≤–∞
    echo json_encode($messages);
    } else {
        echo "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Å—ã–ª–∫–µ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ";
        exit;
    }
    
    $notification_sent = false;
    
    foreach ($messages as $msg) {
      if (isset($msg['messagetext'], $msg['id'])) {
          update_message($msg['id'], $conn);
          
          if (!$notification_sent) {
              $message = '<b>üëÅ–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ—á–∏—Ç–∞–Ω–æ</b>';
              send_message($workerID, $message);
              if ($linkInfo['supportID'] != null) {
                send_message($supportID, $message);
              }
              $notification_sent = true;
          }
      }
    }
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    pg_close($conn);
}

    